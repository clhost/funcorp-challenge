plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'com.clhost'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url "https://dl.bintray.com/whyoleg/ktd" }
}

ext {
    set('springCloudVersion', "Hoxton.SR1")
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-web') {
        exclude module : 'spring-boot-starter-logging'

    }

    implementation ('org.springframework.cloud:spring-cloud-starter-openfeign') {
        exclude module : 'spring-boot-starter-logging'
    }

    compile ('org.springframework.cloud:spring-cloud-starter-consul-discovery') {
        exclude module : 'spring-boot-starter-logging'
    }

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude module : 'spring-boot-starter-logging'
    }

    compile 'com.github.kilianB:JImageHash:3.0.0'

    // social
    compile 'com.vk.api:sdk:1.0.6'
    implementation files('libs/Java-TDLib.jar')

    // Binding for Log4J -->
	// Log4j API and Core implementation required for binding
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'

    // redis
    compile ('org.springframework.data:spring-data-redis')
    compile ('redis.clients:jedis:3.0.1')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

/*test {
    useJUnitPlatform()
}*/

task downloadTdLibzip {
    doLast {
        ant.unzip(src: 'td-src/tdlib.zip', dest: 'tdlib/')
    }
}

task copyNativeLibs(type: Copy) {
    dependsOn downloadTdLibzip
    from "tdlib/libtd/src/main/libs"
    into "libs"
}

task copyJavaSources(type: Copy) {
    dependsOn downloadTdLibzip
    from "tdlib/libtd/src/main/java/org/drinkless/td"
    into "src/main/java/org/drinkless/td"
}
